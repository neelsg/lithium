Li 0

# array provides a generic data type that can be used to store an array of
# items of a given type.

def type[n any]:
	init func(...items n):
		# Initialize a new array
	
	pub slice func(low, high int) def[n]:
		# Slice and array
	
	get length int:
		# Return the number of items in the array
	
	def func(index int) n:
		# Return the item at the index
	
	pub mod clear func:
		# Remove all items from the array
	
	pub exists func(index int) bool:
		# Check if the index exists
	
	pub get func(index int) (n, bool):
		# Get an item with the given index and also check if the index exists
	
	pub mod push func(...item n):
		# Add new item(/s) to an array
	
	pub mod pop func() n:
		# Remove and return the last item of an array
	
	pub first func() ((int, n), int, bool):
		# Return the first item for use in iteration
		
	
	pub next func(prior int) ((int, n), int, bool):
		# Return the next item for use in iteration
	
	.= func(other def[n]):
		# Create a copy of an array
		clear()
		for item n in other:
			push(item)
		return
	
	.+= func(item n):
		# Add an item to an array
		push(item)
		return
	
	.== func(other def[n]) bool:
		# Check if the array is equal to another array
